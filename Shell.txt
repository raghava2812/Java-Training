#! bin/sh

# Basic Code to read and print the data from user
datab=Muni
read data
echo "Hey! $datab $data"

#using $0 and $1 to ${n}
echo this script name is DELL
echo The first Argument is $1 Muni Raghava
echo The second Argument is $2 Harish
echo The third Argument is $3 Naveen
echo The fouth Argument is $4 Kumar
echo The fifth Argument is $5 Good

#Implementing Arrays
ARR[0]="Muni"
ARR[1]="Raghava"
ARR[2]="Menakuru"
ARR[3]=9110547473
ARR[4]=524421
echo "Here Line by line execution :"
echo "Name : ${ARR[0]} ${ARR[1]}"
echo "Location : ${ARR[2]}"
echo "Number : ${ARR[3]}"
echo "Pincode : ${ARR[4]}"
echo "Print Array Elements at Once :"
echo "Array Contains : ${ARR[*]}"

#Arthimatic operators
a=10
b=20
echo "Addition : `expr $a + $b`"
echo "Subtraction : `expr $a - $b`"
echo "Multiplication : `expr $a \* $b`"
echo "Division : `expr $a / $b`"
echo "Modulus : `expr $a % $b`"
echo "Equal to : [ $a == $b ]"
echo "Not Equal to: [ $a != $b ]"

#Relational Operators and if-elif-fi
a=20
b=10
if([ $a -eq $b ])
then
echo "$a is equal to $b"
elif([ $a -ge $b ])
then
echo "$a is not equal to $b"
echo "$a is greaterthan $b"
else
echo "$a is not equal to $b"
echo "$a is lesserthan $b"
fi


#Logical Operators
a=20
b=10
if([ $a -eq 20 -a $b -ge 9 ])
then
echo "$a is equal to 20 AND $b is Greaterthan 9"
fi
if([ $a -ne 20 -o $b -ge 9 ])
then
echo "$a is equal to 20 OR $b is Greaterthan 9"
fi


#String Operators and if else as well
a=abc
b=fgh
if([ $a = $b ])
then
echo "$a is equal to $b using String"
else
echo "ST1 = is false"
fi
if([ $a != $b ])
then
echo "$a is not equal to $b using String"
else
echo "ST2 != is false"
fi
if([ -z $a ])
then
echo "$a have no elements"
else
echo "$a have some elements"
fi
if([ -n $a ])
then
echo "$a has non zero elements"
else
echo "$a have zero elements"
fi


#for loop
for((i=10; i>0; i--))
do
echo "Numbers in Descending Order : $i"
done

for table in {2..20..2}
do
echo "2 Table : $table"
done



# 2 Table using Shell
n=2
for((i=1; i<=20; i++))
do
echo "2 * $i = `expr $n \* $i`"
done

# n Table using Shell
read n
for((i=1; i<=20; i++))
do
echo "$n * $i = `expr $n \* $i`"
done